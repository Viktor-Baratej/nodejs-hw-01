import { readContacts } from '../utils/readContacts.js';
import { writeContacts } from '../utils/writeContacts.js';
import { createFakeContact } from '../utils/createFakeContact.js';

const addOneContact = async () => {
  try {
    // –ó—á–∏—Ç—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏
    const existingContacts = await readContacts();

    if (!Array.isArray(existingContacts)) {
      throw new Error('Existing contacts data is corrupted!');
    }

    // –ì–µ–Ω–µ—Ä—É—î–º–æ –æ–¥–∏–Ω –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç
    const newContact = createFakeContact();

    // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç –¥–æ –º–∞—Å–∏–≤—É
    const updatedContacts = [...existingContacts, newContact];

    console.log('üìù Adding new contact:', newContact); // –î–æ–¥–∞—î–º–æ –ª–æ–≥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏

    // –ó–∞–ø–∏—Å—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ —É —Ñ–∞–π–ª
    await writeContacts(updatedContacts);

    console.log(`‚úÖ Successfully added a new contact!`);
  } catch (error) {
    console.error('‚ùå Error adding contact:', error.message);
  }
};

// –í–∏–∫–æ–Ω—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
addOneContact();
